---
const steps = [
  {
    title: "Client Request",
    description: "Client requests chunk location from master",
    icon: "üîç",
    color: "#1e3c72"
  },
  {
    title: "Master Response",
    description: "Master returns chunk locations and lease holder",
    icon: "üìç",
    color: "#2980b9"
  },
  {
    title: "Data Transfer",
    description: "Client reads/writes directly with chunk servers",
    icon: "üì§",
    color: "#27ae60"
  },
  {
    title: "Replication",
    description: "Data is replicated across multiple chunk servers",
    icon: "üîÑ",
    color: "#8e44ad"
  }
];
---

<div class="data-flow">
  <h3>Data Flow Process</h3>
  <div class="flow-steps">
    {steps.map((step, index) => (
      <div class="step" style={`--step-color: ${step.color}`}>
        <div class="step-icon">
          <span class="icon">{step.icon}</span>
          <div class="icon-ring"></div>
        </div>
        <div class="step-content">
          <h4>{step.title}</h4>
          <p>{step.description}</p>
        </div>
        {index < steps.length - 1 && (
          <div class="step-connector">
            <div class="connector-line">
              <div class="connector-dot"></div>
            </div>
          </div>
        )}
      </div>
    ))}
  </div>
</div>

<style>
.data-flow {
  margin: 2rem 0;
  padding: 2rem;
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.data-flow h3 {
  text-align: center;
  color: #1e3c72;
  margin-bottom: 2rem;
}

.flow-steps {
  display: flex;
  gap: 2rem;
  justify-content: center;
  align-items: flex-start;
  position: relative;
}

.step {
  flex: 1;
  min-width: 200px;
  max-width: 300px;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  position: relative;
}

.step-icon {
  position: relative;
  width: 70px;
  height: 70px;
  margin-bottom: 1rem;
}

.icon {
  position: relative;
  z-index: 2;
  font-size: 2rem;
  width: 60px;
  height: 60px;
  background: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.icon-ring {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  border: 2px solid var(--step-color);
  border-radius: 50%;
  animation: ringPulse 2s infinite;
}

@keyframes ringPulse {
  0% {
    transform: translate(-50%, -50%) scale(0.8);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.5);
    opacity: 0;
  }
}

.step-content {
  position: relative;
  z-index: 2;
}

.step-content h4 {
  color: var(--step-color);
  margin: 0.5rem 0;
}

.step-content p {
  color: #666;
  font-size: 0.9rem;
  margin: 0;
}

.step-connector {
  position: absolute;
  top: 35px;
  right: -1rem;
  width: 2rem;
  height: 2px;
  transform: translateX(100%);
}

.connector-line {
  width: 100%;
  height: 100%;
  background: var(--step-color);
  position: relative;
}

.connector-dot {
  position: absolute;
  width: 8px;
  height: 8px;
  background: var(--step-color);
  border-radius: 50%;
  top: 50%;
  transform: translateY(-50%);
  animation: moveDot 2s infinite linear;
}

@keyframes moveDot {
  0% {
    left: -4px;
  }
  100% {
    left: calc(100% - 4px);
  }
}

@media (max-width: 768px) {
  .flow-steps {
    flex-direction: column;
    align-items: center;
  }
  
  .step {
    width: 100%;
  }
  
  .step-connector {
    position: absolute;
    top: 100%;
    left: 50%;
    width: 2px;
    height: 2rem;
    transform: translateX(-50%);
  }
  
  .connector-line {
    height: 100%;
    width: 2px;
  }
  
  @keyframes moveDot {
    0% {
      top: -4px;
    }
    100% {
      top: calc(100% - 4px);
    }
  }
}
</style>